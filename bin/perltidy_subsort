#!/usr/bin/perl
#
#  Sort subroutines within Perl module or file
#


#  Compiler pragma
#
use strict qw(vars);
use warnings;


#  Use the base modules
#
use PerlTidy::SubSort qw(subsort);
use PerlTidy::SubSort::Util;


#  Other external modules
#
use Getopt::Long;
use Pod::Usage;
use FindBin qw($Script);


#  Version Info, must be all one line for MakeMaker, CPAN.
#
$::VERSION='0.006';


#  Run main
#
exit ${ &main(\@ARGV) || die };

#===================================================================================================


sub main {


    #  Get argv array ref
    #
    my $argv_ar=shift();


    #  Default options
    #
    my %opt=();


    #  Get command line options
    #
    GetOptions(\%opt,
        'help|?',
        'man',
        'version'
    ) || pod2usage(2);
    pod2usage(-verbose => 99, -sections => 'Synopsis|Options', -exitval => 1) if $opt{'help'};
    pod2usage(-verbose => 2) if $opt{'man'};
    $opt{'version'} && do {
      print "$Script version: $::VERSION\n"; 
      exit 0 
    };
    
    
    #  Run through files
    #
    foreach my $fn (@{$argv_ar}) {
      msg("file $fn processing");
      my $count_sr=subsort($fn) ||
        return err("$Script: unable to subsort $fn");
      msg("file $fn sorted %s subroutines", ${$count_sr});
    }
    
    
    #  Done
    #
    return \0;

}

